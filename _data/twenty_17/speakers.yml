- title: John A. De Goes
  name: John A. De Goes
  subtitle: Independent Consultant
  img: john_de_goes.jpg
  thumbnail: john_de_goes.jpg
  alt: John A. De Goes
  topic: Coming soon
  description: Coming soon

- title: Wiem Zine Elabidine
  name: Wiem-Zine-Elabidine
  subtitle: Software Engineer
  img: wiem_zine_elabidine.jpg
  thumbnail: wiem_zine_elabidine.jpg
  alt: Wiem Zine Elabidine
  topic: Coming soon
  description: Coming soon

- title: Paul Phillips
  name: Paul-Phillips
  subtitle: Coming Soon
  img: Paul_Phillips.jpg
  thumbnail: Paul_Phillips.jpg
  alt: Paul Phillips
  topic: "xs: a collections cli"
  description: "The pastiche of command line tools we utilize to process text can be
reimagined more coherently as collections operations, where the
collection is a sequence of strings, or a view imposed on a sequence of
strings. The tool I present here has simplified my life in this regard.
It offers a highly concise way to perform chains of collections
operations (e.g. take/takeRight, drop/dropRight, slice, map, filter)
with all of them designed to flourish as much as anything can amongst
the grim ad hoc reality of unix pipelines. I call it xs."

- title: Itamar Ravid
  name: Itamar-Ravid
  subtitle: Software consultant, DevOps.
  img: Itamar_Ravid.jpg
  thumbnail: Itamar_Ravid.jpg
  alt: Itamar Ravid
  topic: Fancy (Z)Streams for Fancy Programs
  description: "Streams are a declarative, high-level abstraction for representing
many types of programs. In particular, purely functional streams built
on top of effect monads are a joy to use for constructing performant,
resource safe and concurrent applications. Many patterns written
using manual concurrency management can be elegantly represented using
streams, resulting in concise and correct programs.

ZIO's streams library was introduced at the end of 2018. Since then,
it has gone through several iterations, improving compositionality,
resource saftey and support for concurrency. In this talk, we will
show how, by using the ZStream and ZSink data types, we can quickly
construct concurrent and resource-safe applications. We will also look
at the internal representation of ZStream to gain a deeper
understanding of how it works under the hood. No prior experience with
the library is required!"

- title: Kai
  name: Kai
  subtitle: Software Engineer at http://7mind.io
  img: Kai.jpg
  thumbnail: Kai.jpg
  alt: Kai
  topic: Coming soon
  description: Coming soon

- title: Pierre Ricadat
  name: Pierre-Ricadat
  subtitle: Software Architect
  img: Pierre_Ricadat.jpg
  thumbnail: Pierre_Ricadat.jpg
  alt: Pierre-Ricadat
  topic: Designing a Functional GraphQL Library
  description: "GraphQL is becoming a strong alternative to REST for exposing APIs. In
this talk, I will introduce Caliban, a new functional library for
writing GraphQL backends in Scala. I will go through the process of
creating the library from scratch and explain my design choices: how
to minimize boilerplate, how to expose a pure API with explicit
errors, how to handle subscriptions, etc."

- title: Adam Fraser
  name: Adam-Fraser
  subtitle: Scala Developer
  img: Adam_Fraser.jpg
  thumbnail: Adam_Fraser.jpg
  alt: Adam Fraser
  topic: Scala Developer
  description: "As we gain more and more expressive ways of writing software using functional effects we also need tools to test that software. Unfortunately, existing testing frameworks have not kept up with the evolution of modern functional effect systems. In this talk we will learn how existing testing frameworks force us to treat effects as “second class citizens” and the power of treating effects as first class. Then we will discuss ZIO Test, a next generation testing library that takes this idea to its logical conclusion by making every test an effect. We will see how this makes many “hard” problems in testing easy and enables unifying features like property based testing that used to require separate libraries."

- title: Dejan Mijic
  name: Dejan-Mijic
  subtitle: Senior Backend Engineer at Zalando SE
  img: Dejan_Mijic.jpg
  thumbnail: Dejan_Mijic.jpg
  alt: Dejan Mijic
  topic: Let's gossip!
  description: "Over the past couple of years, we have witnessed the emergence of functional effect
libraries. While most of them successfully conquered single node computation, providing
better solutions for concurrency than actors, distributed computation is still untamed.
In this talk, Dejan and Przemyslaw will introduce their work on ZIO Keeper, a principled
functional library for building distributed systems. They will present the building blocks
of this library, explain the design choices behind them, and demonstrate their capabilities.
Finally, they will wrap up the talk with a glimpse to the future, sketching the roadmap to a
functional solution to the problem of distributed computation."

- title: Przemyslaw Wierzbicki
  name: Przemyslaw-Wierzbicki
  subtitle: Coming soon
  img: Przemyslaw_Wierzbicki.jpg
  thumbnail: Przemyslaw_Wierzbicki.jpg
  alt: Przemyslaw Wierzbicki
  topic: Let's gossip!
  description: "Over the past couple of years, we have witnessed the emergence of functional effect
libraries. While most of them successfully conquered single node computation, providing
better solutions for concurrency than actors, distributed computation is still untamed.
In this talk, Dejan and Przemyslaw will introduce their work on ZIO Keeper, a principled
functional library for building distributed systems. They will present the building blocks
of this library, explain the design choices behind them, and demonstrate their capabilities.
Finally, they will wrap up the talk with a glimpse to the future, sketching the roadmap to a
functional solution to the problem of distributed computation."

- title: Pierangelo Cecchetto
  name: Pierangelo-Cecchetto
  subtitle: Backend Developer
  img: Pierangelo_Cecchetto.jpg
  thumbnail: Pierangelo_Cecchetto.jpg
  alt: Pierangelo-Cecchetto
  topic: Ray Tracing with ZIO
  description: "In the FP realm in Scala, Tagless Final is a popular technique to have injectable, testable, extensible components. An alternative technique is the usage of environmental effects, that provides similar benefits, with a lower entry barrier and improved type-inference.
During this talk we will build a fully testable ray tracer in Scala with ZIO using this environmental effects. We will also explore some useful combinators available in ZIO to build concurrent, resource-safe applications."

- title: Pavel Shirshov
  name: Pavel-Shirshov
  subtitle: Founder
  img: Pavel_Shirshov.jpg
  thumbnail: Pavel_Shirshov.jpg
  alt: Pavel Shirshov
  topic: Coming soon
  description: Coming soon

- title: Jakub Kozlowski
  name: Jakub-Kozlowski
  subtitle: Functional developer
  img: Jakub_Kozlowski.jpg
  thumbnail: Jakub_Kozlowski.jpg
  alt: Jakub Kozlowski
  topic: Coming soon
  description: Coming soon

- title: Matt Searle
  name: Matt-Searle
  subtitle: Coming Soon
  img: Matt_Searle.jpg
  thumbnail: Matt_Searle.jpg
  alt: Matt Searle
  topic: Coming soon
  description: Coming soon

- title: Oleg Nizhnik
  name: Oleg-Nizhnik
  subtitle: Software Architect at Tinkoff.ru
  img: Oleg_Nizhnik.jpg
  thumbnail: Oleg_Nizhnik.jpg
  alt: Oleg Nizhnik
  topic: Composition using Arrows and Monoidal Categories
  description: "Monads and monad-like types are the perfect fit for many eDSLs in functional programming, however, sometimes we need to enforce stricter language requirements such as static process analysis, minimizing allocations, purity, totality and linear-like semantics (exactly-one use). In such cases, Arrows and Symmetric Monoidal Categories (SMC) may be a fine choice, still they are generally avoided because manual composing is hard. We present WIP macro library volga that is for arrows and SMC what is for-comprehension for monads. We will discuss use cases applicability of Arrows and SMC, as well as syntax and semantics of volga."

- title: Alexey Soshin
  name: Alexey-Soshin
  subtitle: Staff Engineer
  img: Alexey_Soshin.jpg
  thumbnail: Alexey_Soshin.jpg
  alt: Alexey Soshin
  topic: Scala/Kotlin interop
  description: "Scala is a language that many companies use nowadays. But it’s also considered to be very complex and hard to master. So, some of those companies are looking to migrate to Kotlin. Do they need to write everything from scratch, though?
In this talk, we’ll see how we can build Kotlin services on top of Scala infrastructure, so you can have best of both."

- title: Chetan Khatri
  name: Chetan-Khatri
  subtitle: FOSS Developer
  img: Chetan_Khatri.jpg
  thumbnail: Chetan_Khatri.jpg
  alt: Chetan Khatri
  topic: Demystify Functional effects with Apache Spark and Scala
  description: "This talk will give a pragmatic approach to understanding the side effects of the very
  popular Data engineering framework 'Apache Spark' and related transformations.
  Apache Spark operations are side-effect driven.
  It is very important to have control over those side-effects.
  In the end, the talk will demonstrate production-ready implementation and design with ZIO."

- title: Tom Sydney Kerckhove
  name: Tom-Sydney-Kerckhove
  subtitle: Technical Leader, Speaker
  img: Tom_Sydney_Kerckhove.jpg
  thumbnail: Tom_Sydney_Kerckhove.jpg
  alt: Tom Sydney Kerckhove
  topic: Validity-based testing
  description: "Writing correct software is difficult. Property testing has the
potential to make safe software easier and cheaper. However, current
methods still involve the costly requirement for programmers to write
generators, shrinking functions and properties. Validity-based testing
promises free generators, free shrinking and cheap properties, to allow
property-based testing to fulfill its true potential."

- title: Oleksandra A Holubitska
  name:  Oleksandra-A-Holubitska
  subtitle: Web Developer
  img: Aleksandra_A_Holubitska.jpg
  thumbnail: Aleksandra_A_Holubitska.jpg
  alt: Oleksandra Holubitska
  topic: Coming soon
  description: "Arrays are fast and don't box primitive values, but due to class tag requirements and mutability, they are painful to use and don't integrate well into functional code. In this presentation, Aleksandra A Holubitska introduces the audience to Chunk, a data type in ZIO that's designed to be friendly to use, immutable, and high-performance. Learn more about how you can replace usage of arrays in your application with this new high-performance data type that powers ZIO Streams and other libraries in the ZIO ecosystem."
